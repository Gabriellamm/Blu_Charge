{"version":3,"file":"Blu.js","sources":["pages/Blu/Blu.vue","pages/Blu/Blu.vue?type=page"],"sourcesContent":["<!-- 修改后的 Blu.vue -->\n<template>\n\t<view class=\"container\">\n    <!-- 原有的设备状态显示 -->\n    <view class=\"card\">\n      <text class=\"title\">设备状态</text>\n      <view class=\"status-line\">\n        <text>蓝牙: {{ bluetoothState }}</text>\n        <text>连接: {{ connected ? '已连接' : '未连接' }}</text>\n      </view>\n      <view class=\"status-line\" v-if=\"connectedDevice\">\n        <text @longpress=\"copyDeviceName\" class=\"copyable\">设备: {{ connectedDevice.name }}</text>\n        <text>信号: {{ connectedDevice.RSSI }}dBm</text>\n      </view>\n      <view class=\"status-line\">\n        <text>充电: {{ chargeStatus }}</text>\n        <text>剩余: {{ remainingTime }}分钟</text>\n      </view>\n    </view>\n\n    <!-- 原有的设备列表 -->\n    <view class=\"card\" v-if=\"devices.length > 0\">\n      <text class=\"title\">发现设备 ({{ devices.length }})</text>\n      <view v-for=\"device in devices\" :key=\"device.deviceId\" \n            class=\"device-item\" @tap=\"connectDevice(device)\">\n        <text class=\"device-name\">{{ device.name || '未知设备' }}</text>\n        <text class=\"device-info\">ID: {{ device.deviceId.slice(-8) }}</text>\n        <text class=\"device-info\">信号: {{ device.RSSI }}dBm</text>\n      </view>\n    </view>\n\n    <!-- 原有的充电控制 -->\n    <view class=\"card\" v-if=\"connected\">\n      <text class=\"title\">充电控制</text>\n      <view class=\"control-row\">\n        <button class=\"btn\" :class=\"{'btn-active': charging}\" \n                @tap=\"startCharge(30)\" :disabled=\"charging\">\n          充电30分钟\n        </button>\n        <button class=\"btn\" :class=\"{'btn-active': !charging}\" \n                @tap=\"stopCharge()\" :disabled=\"!charging\">\n          停止充电\n        </button>\n      </view>\n      <view class=\"control-row\">\n        <button class=\"btn secondary\" @tap=\"initDevice()\">\n          初始化设备\n        </button>\n        <button class=\"btn secondary\" @tap=\"changeDeviceName()\">\n          修改名称\n        </button>\n      </view>\n    </view>\n\n    <!-- ✅ 新增：OTA升级界面 -->\n    <view class=\"card\" v-if=\"connected\">\n      <text class=\"title\">固件升级</text>\n      \n      <!-- 版本信息和升级提示 -->\n      <view class=\"version-info\" v-if=\"deviceVersion\">\n        <text>当前版本: {{ deviceVersion }}</text>\n        <text v-if=\"latestVersion\" :class=\"{'update-available': hasUpdate}\">\n          最新版本: {{ latestVersion }}\n        </text>\n        <text v-if=\"hasUpdate\" class=\"update-tip\">有可用更新</text>\n      </view>\n      \n      <!-- 升级进度 -->\n      <view class=\"upgrade-progress\" v-if=\"otaStatus.isUpgrading\">\n        <text>升级进度: {{ otaStatus.progress }}%</text>\n        <progress :percent=\"otaStatus.progress\" show-info stroke-width=\"6\" />\n        <text>已发送: {{ otaStatus.sentPackets }} / {{ otaStatus.totalPackets }} 包</text>\n      </view>\n      \n      <!-- 操作按钮 -->\n      <view class=\"ota-controls\">\n        <button class=\"btn\" @tap=\"checkVersion\" :disabled=\"otaStatus.isUpgrading\">\n          检查版本\n        </button>\n        <button class=\"btn\" @tap=\"startOTAUpgrade\" \n                :disabled=\"!hasUpdate || otaStatus.isUpgrading\"\n                v-if=\"hasUpdate\">\n          {{ otaStatus.isUpgrading ? '升级中...' : '开始升级' }}\n        </button>\n        <button class=\"btn danger\" @tap=\"cancelOTAUpgrade\" \n                v-if=\"otaStatus.isUpgrading\">\n          取消升级\n        </button>\n      </view>\n      \n      <!-- 升级状态提示 -->\n      <view class=\"ota-status\">\n        <text v-if=\"otaStatus.isUpgrading\" class=\"upgrading\">正在升级，请勿断开设备...</text>\n        <text v-if=\"upgradeResult === 'success'\" class=\"success\">升级成功！</text>\n        <text v-if=\"upgradeResult === 'failed'\" class=\"failed\">升级失败，请重试</text>\n      </view>\n    </view>\n\n    <!-- 原有的操作面板 -->\n    <view class=\"card\">\n      <text class=\"title\">设备操作</text>\n      <view class=\"control-row\">\n        <button class=\"btn\" @tap=\"initBluetooth()\" \n                :disabled=\"bluetoothAvailable\">\n          {{ bluetoothAvailable ? '蓝牙就绪' : '初始化蓝牙' }}\n        </button>\n        <button class=\"btn\" @tap=\"scanDevices()\" \n                :disabled=\"!bluetoothAvailable || scanning\">\n          {{ scanning ? '扫描中...' : '扫描设备' }}\n        </button>\n      </view>\n      <button class=\"btn danger\" @tap=\"disconnectDevice()\" \n              :disabled=\"!connected\">\n        断开连接\n      </button>\n    </view>\n\n    <!-- 原有的调试信息 -->\n    <view class=\"card\">\n      <text class=\"title\">调试信息</text>\n      <scroll-view scroll-y=\"true\" class=\"log-container\">\n        <text v-for=\"(log, index) in logs\" :key=\"index\" class=\"log-item\">\n          {{ log }}\n        </text>\n      </scroll-view>\n      <button class=\"btn small\" @tap=\"clearLogs()\">清空日志</button>\n    </view>\n  </view>\n</template>\n\n<script>\n// ✅ 导入原有的协议处理\nimport { PROTOCOL, PacketBuilder } from './protocol.js'\n// ✅ 新增：导入OTA管理器\nimport { otaManager } from './ota-upgrade.js'\n\nexport default {\n  data() {\n    return {\n\t\t      // // 蓝牙状态\n\t\t      // bluetoothAvailable: false,\n\t\t      // bluetoothState: '未初始化',\n\t\t      // scanning: false,\n\t\t      // connected: false,\n\t\t      // connectedDevice: null,\n\t\t      \n\t\t      // // 设备状态\n\t\t      // devices: [],\n\t\t      // chargeStatus: '未充电',\n\t\t      // remainingTime: 0,\n\t\t      // charging: false,\n\t\t      \n\t\t      // // 蓝牙特征值\n\t\t      // serviceId: '',\n\t\t      // notifyCharId: '',\n\t\t      // writeCharId: '',\n\t\t      \n\t\t      // // 调试\n\t\t      // logs: [],\n\t\t\t  \n      // 原有的蓝牙状态\n      bluetoothAvailable: false,\n      bluetoothState: '未初始化',\n      scanning: false,\n      connected: false,\n      connectedDevice: null,\n      \n      // 原有的设备状态\n      devices: [],\n      chargeStatus: '未充电',\n      remainingTime: 0,\n      charging: false,\n      \n      // 原有的蓝牙特征值\n      serviceId: '',\n      notifyCharId: '',\n      writeCharId: '',\n      \n      // 原有的调试\n      logs: [],\n      \n      // ✅ 新增：OTA相关数据\n      deviceVersion: '',          // 设备当前版本\n      latestVersion: '',          // 服务器最新版本\n      hasUpdate: false,           // 是否有更新\n      otaStatus: {                // OTA升级状态\n        isUpgrading: false,\n        progress: 0,\n        totalPackets: 0,\n        sentPackets: 0\n      },\n      upgradeResult: ''           // 升级结果：success/failed\n    }\n  },\n\n  onLoad() {\n    this.addLog('页面加载完成')\n    this.initBluetooth()\n    \n    // ✅ 新增：开始监控OTA状态\n    this.monitorOTAStatus()\n  },\n\n  methods: {\n    // 初始化蓝牙\n    async initBluetooth() {\n      this.addLog('初始化蓝牙适配器...')\n      \n      try {\n        const res = await new Promise((resolve, reject) => {\n          uni.openBluetoothAdapter({\n            success: resolve,\n            fail: reject\n          })\n        })\n        \n        this.addLog('蓝牙适配器打开成功')\n        this.bluetoothAvailable = true\n        this.bluetoothState = '就绪'\n        \n        // 监听状态变化\n        uni.onBluetoothAdapterStateChange((res) => {\n          this.addLog(`蓝牙状态变化: 可用=${res.available}, 搜索中=${res.discovering}`)\n          this.bluetoothAvailable = res.available\n        })\n        \n        // 监听设备发现\n        uni.onBluetoothDeviceFound(this.onDeviceFound.bind(this))\n        \n      } catch (err) {\n        this.addLog(`蓝牙初始化失败: ${JSON.stringify(err)}`)\n        uni.showModal({\n          title: '提示',\n          content: '请检查手机蓝牙是否开启，并授予蓝牙权限',\n          showCancel: false\n        })\n      }\n    },\n    \n    // 扫描设备\n    async scanDevices() {\n      if (!this.bluetoothAvailable) {\n        uni.showToast({ title: '蓝牙未就绪', icon: 'none' })\n        return\n      }\n    \n      this.addLog('开始扫描CJC设备...')\n      this.scanning = true\n      this.devices = []\n    \n      try {\n        await new Promise((resolve, reject) => {\n          uni.startBluetoothDevicesDiscovery({\n            // services: [PROTOCOL.SERVICE_UUID],\n            allowDuplicatesKey: false,\n            success: resolve,\n            fail: reject\n          })\n        })\n        \n        this.addLog('扫描启动成功')\n        \n        // 5秒后停止扫描\n        setTimeout(() => {\n          this.stopScan()\n        }, 5000)\n        \n      } catch (err) {\n        this.addLog(`扫描启动失败: ${JSON.stringify(err)}`)\n        this.scanning = false\n      }\n    },\n    \n    // 停止扫描\n    async stopScan() {\n      try {\n        await new Promise((resolve, reject) => {\n          uni.stopBluetoothDevicesDiscovery({\n            success: resolve,\n            fail: reject\n          })\n        })\n        this.addLog('扫描已停止')\n      } catch (err) {\n        this.addLog(`停止扫描失败: ${JSON.stringify(err)}`)\n      }\n      this.scanning = false\n    },\n    \n    // 设备发现回调\n    onDeviceFound(res) {\n      const cjcDevices = res.devices.filter(device => \n        device.name && device.name.startsWith('CJC')\n      )\n      \n      cjcDevices.forEach(device => {\n        if (!this.devices.find(d => d.deviceId === device.deviceId)) {\n          this.devices.push(device)\n          this.addLog(`发现设备: ${device.name} (${device.RSSI}dBm)`)\n        }\n      })\n    },\n    \n    // 连接设备\n    async connectDevice(device) {\n      this.addLog(`连接设备: ${device.name}`)\n      \n      try {\n        // 建立连接\n        await new Promise((resolve, reject) => {\n          uni.createBLEConnection({\n            deviceId: device.deviceId,\n            success: resolve,\n            fail: reject\n          })\n        })\n        \n        this.addLog('物理连接成功')\n        this.connected = true\n        this.connectedDevice = device\n        \n        // 获取服务\n        await this.getServices(device.deviceId)\n        \n      } catch (err) {\n        this.addLog(`连接失败: ${JSON.stringify(err)}`)\n        uni.showToast({ title: '连接失败', icon: 'none' })\n      }\n    },\n    \n    // 获取服务\n    async getServices(deviceId) {\n      try {\n        const res = await new Promise((resolve, reject) => {\n          uni.getBLEDeviceServices({\n            deviceId: deviceId,\n            success: resolve,\n            fail: reject\n          })\n        })\n        \n        // 查找目标服务\n        const targetService = res.services.find(s => s.uuid.toUpperCase().includes(PROTOCOL.SERVICE_UUID))\n        if (!targetService) {\n          throw new Error('未找到目标服务')\n        }\n        \n        this.serviceId = targetService.uuid\n        this.addLog(`找到服务: ${targetService.uuid}`)\n        \n        // 获取特征值\n        await this.getCharacteristics(deviceId)\n        \n      } catch (err) {\n        this.addLog(`获取服务失败: ${err.message}`)\n      }\n    },\n    \n    // 获取特征值\n    async getCharacteristics(deviceId) {\n      try {\n        const res = await new Promise((resolve, reject) => {\n          uni.getBLEDeviceCharacteristics({\n            deviceId: deviceId,\n            serviceId: this.serviceId,\n            success: resolve,\n            fail: reject\n          })\n        })\n        \n        // 查找特征值\n        for (let char of res.characteristics) {\n          const uuid = char.uuid.toUpperCase()\n          \n          if (uuid.includes(PROTOCOL.NOTIFY_CHAR_UUID) && char.properties.notify) {\n            this.notifyCharId = char.uuid\n            this.addLog(`找到Notify特征: ${char.uuid}`)\n          }\n          \n          if (uuid.includes(PROTOCOL.WRITE_CHAR_UUID) && char.properties.write) {\n            this.writeCharId = char.uuid\n            this.addLog(`找到Write特征: ${char.uuid}`)\n          }\n        }\n        \n        if (!this.notifyCharId || !this.writeCharId) {\n          throw new Error('未找到必要的特征值')\n        }\n        \n        // 启用通知\n        await this.enableNotify(deviceId)\n        \n      } catch (err) {\n        this.addLog(`获取特征值失败: ${err.message}`)\n      }\n    },\n    \n    // 启用通知\n    async enableNotify(deviceId) {\n      try {\n        await new Promise((resolve, reject) => {\n          uni.notifyBLECharacteristicValueChange({\n            deviceId: deviceId,\n            serviceId: this.serviceId,\n            characteristicId: this.notifyCharId,\n            state: true,\n            success: resolve,\n            fail: reject\n          })\n        })\n        \n        this.addLog('通知启用成功')\n        \n        // 监听设备数据\n        uni.onBLECharacteristicValueChange(this.onDeviceDataReceived.bind(this))\n        \n        // 连接完成，发送初始化命令\n        setTimeout(() => {\n          this.initDevice()\n        }, 500)\n        \n      } catch (err) {\n        this.addLog(`启用通知失败: ${JSON.stringify(err)}`)\n      }\n    },\n    \n    // 接收设备数据\n    onDeviceDataReceived(res) {\n      try {\n        const hexData = PacketBuilder.ab2hex(res.value)\n        this.addLog(`收到设备数据: ${hexData}`)\n        \n        const parsedData = PacketBuilder.parseDeviceResponse(res.value)\n        this.handleDeviceCommand(parsedData.cmdId, parsedData.payload)\n        \n      } catch (err) {\n        this.addLog(`数据解析错误: ${err.message}`)\n      }\n    },\n    \n    // 处理设备命令\n    handleDeviceCommand(cmdId, payload) {\n      const dataView = new DataView(payload.buffer)\n      \n      switch (cmdId) {\n        case PROTOCOL.CMD_CHARGE_STATUS: // 0x11 充电状态反馈\n          const status = dataView.getUint8(0)\n          const remainingTime = dataView.getUint16(1, false)\n          \n          this.chargeStatus = status === 1 ? '充电中' : '未充电'\n          this.remainingTime = remainingTime\n          this.charging = status === 1\n          \n          this.addLog(`充电状态: ${this.chargeStatus}, 剩余: ${remainingTime}分钟`)\n          break\n          \n        case PROTOCOL.CMD_INIT_RESULT: // 0x21 初始化结果\n          const initStatus = dataView.getUint8(0)\n          this.addLog(`设备初始化: ${initStatus === 1 ? '成功' : '失败'}`)\n          \n          if (initStatus === 1) {\n            uni.showToast({ title: '初始化成功' })\n          } else {\n            uni.showToast({ title: '初始化失败', icon: 'none' })\n          }\n          break\n          \n        case PROTOCOL.CMD_CHANGE_NAME_RESULT: // 0x31 改名结果\n          const nameStatus = dataView.getUint8(0)\n          const resultMessage = nameStatus === 1 ? '成功' : '失败'\n          this.addLog(`改名结果: ${resultMessage}`)\n          \n          // 显示用户界面提示\n          uni.showToast({\n            title: `修改名称${resultMessage}`,\n            icon: nameStatus === 1 ? 'success' : 'none'\n          })\n          \n          // 如果改名成功，断开重连后会自动更新名称\n          break\n          \n        default:\n          this.addLog(`未知命令: 0x${cmdId.toString(16)}`)\n      }\n    },\n    \n    // 开始充电\n    async startCharge(duration) {\n      if (!this.connected) {\n        uni.showToast({ title: '设备未连接', icon: 'none' })\n        return\n      }\n      \n      try {\n        const command = PacketBuilder.buildChargeCommand(1, duration) // 1=开启\n        await this.sendCommand(command)\n        this.addLog(`开始充电: ${duration}分钟`)\n        \n      } catch (err) {\n        this.addLog(`发送充电命令失败: ${err.message}`)\n      }\n    },\n    \n    // 停止充电\n    async stopCharge() {\n      if (!this.connected) {\n        return\n      }\n      \n      try {\n        const command = PacketBuilder.buildChargeCommand(0, 0) // 0=关闭\n        await this.sendCommand(command)\n        this.addLog('停止充电')\n        \n      } catch (err) {\n        this.addLog(`发送停止命令失败: ${err.message}`)\n      }\n    },\n    \n    // 初始化设备\n    async initDevice() {\n      if (!this.connected) {\n        return\n      }\n      \n      try {\n        // 使用设备名称作为鉴权码（如：CJC000001）\n        const authCode = this.connectedDevice.name || 'CJC000001'\n        const command = PacketBuilder.buildInitCommand(authCode, 10, 5) // 10分钟断连，5分钟无负载关闭\n        \n        await this.sendCommand(command)\n        this.addLog(`发送初始化命令: ${authCode}`)\n        \n      } catch (err) {\n        this.addLog(`发送初始化命令失败: ${err.message}`)\n      }\n    },\n    \n    // 修改设备名称\n    async changeDeviceName() {\n      if (!this.connected) {\n        return\n      }\n      \n      uni.showModal({\n        title: '修改设备名称',\n        content: '9字符以内',\n        editable: true,\n        placeholderText: 'CJC000002',\n        success: async (res) => {\n          if (res.confirm && res.content) {\n            const newName = res.content.padEnd(9, '\\0').slice(0, 9)\n            \n            try {\n              const command = PacketBuilder.buildChangeNameCommand(newName)\n              await this.sendCommand(command)\n              this.addLog(`发送改名命令: ${newName}`)\n              \n            } catch (err) {\n              this.addLog(`发送改名命令失败: ${err.message}`)\n            }\n          }\n        }\n      })\n    },\n    \n    // 发送命令到设备\n    async sendCommand(commandData) {\n      if (!this.connected || !this.writeCharId) {\n        throw new Error('设备未连接或未找到写入特征')\n      }\n      \n      // 分包发送\n      const packets = PacketBuilder.splitPackets(commandData)\n      this.addLog(`分包发送: ${packets.length}包`)\n      \n      try {\n        for (let i = 0; i < packets.length; i++) {\n          await new Promise((resolve, reject) => {\n            uni.writeBLECharacteristicValue({\n              deviceId: this.connectedDevice.deviceId,\n              serviceId: this.serviceId,\n              characteristicId: this.writeCharId,\n              value: packets[i],\n              success: resolve,\n              fail: reject\n            })\n          })\n          \n          // 包间延迟，避免发送过快\n          if (i < packets.length - 1) {\n            await new Promise(resolve => setTimeout(resolve, 20))\n          }\n        }\n        \n        this.addLog(`命令发送完成: ${PacketBuilder.ab2hex(commandData)}`)\n      } catch (err) {\n        this.addLog(`发送命令失败: ${err.message}`)\n        throw err\n      }\n    },\n    \n        // 断开连接\n        async disconnectDevice() {\n          if (this.connectedDevice) {\n            try {\n              await new Promise((resolve, reject) => {\n                uni.closeBLEConnection({\n                  deviceId: this.connectedDevice.deviceId,\n                  success: resolve,\n                  fail: reject\n                })\n              })\n              \n              this.addLog('设备已断开')\n              this.connected = false\n              this.connectedDevice = null\n              this.charging = false\n              this.chargeStatus = '未充电'\n              this.remainingTime = 0\n              \n            } catch (err) {\n              this.addLog(`断开连接失败: ${JSON.stringify(err)}`)\n            }\n          }\n        },\n    \n        // 复制设备名称到剪贴板\n        copyDeviceName() {\n          if (this.connectedDevice && this.connectedDevice.name) {\n            uni.setClipboardData({\n              data: this.connectedDevice.name,\n              success: () => {\n                uni.showToast({\n                  title: '设备名称已复制',\n                  icon: 'success'\n                })\n                this.addLog(`已复制设备名称: ${this.connectedDevice.name}`)\n              }\n            })\n          }\n        },\n        \n        // 工具函数\n        addLog(message) {\n          const timestamp = new Date().toLocaleTimeString()\n          this.logs.unshift(`[${timestamp}] ${message}`)\n          if (this.logs.length > 50) this.logs.pop()\n        },\n    \n        clearLogs() {\n          this.logs = []\n        }\n      },\n    // ✅ 新增：OTA相关方法\n    \n    /**\n     * 检查设备版本\n     */\n    async checkVersion() {\n      if (!this.connected) {\n        uni.showToast({ title: '设备未连接', icon: 'none' })\n        return\n      }\n      \n      try {\n        uni.showLoading({ title: '检查版本中...' })\n        \n        // 使用Blu.vue中已经建立的连接信息\n        this.deviceVersion = await otaManager.checkFirmwareVersion(\n          this.connectedDevice.deviceId,\n          this.serviceId, \n          this.writeCharId\n        )\n        \n        // 从服务器获取最新版本信息\n        await this.fetchLatestVersion()\n        \n        this.hasUpdate = this.deviceVersion !== this.latestVersion\n        \n        uni.hideLoading()\n        uni.showToast({ \n          title: this.hasUpdate ? '发现新版本' : '已是最新版本',\n          icon: 'none'\n        })\n        \n      } catch (error) {\n        uni.hideLoading()\n        uni.showToast({ title: '版本检查失败', icon: 'none' })\n        console.error('版本检查失败:', error)\n      }\n    },\n    \n    /**\n     * 开始OTA升级\n     */\n    async startOTAUpgrade() {\n      if (!this.hasUpdate) {\n        uni.showToast({ title: '没有可用更新', icon: 'none' })\n        return\n      }\n      \n      if (!this.connected || !this.connectedDevice) {\n        uni.showToast({ title: '设备未连接', icon: 'none' })\n        return\n      }\n      \n      try {\n        // 确认升级\n        const { confirm } = await uni.showModal({\n          title: '固件升级',\n          content: '升级过程中请勿断开设备连接，确保设备电量充足。是否继续？',\n          confirmText: '开始升级',\n          cancelText: '取消'\n        })\n        \n        if (!confirm) return\n        \n        uni.showLoading({ title: '准备升级...' })\n        \n        // 设置进度回调\n        otaManager.setProgressCallback((progress) => {\n          this.otaStatus.progress = progress\n          this.addLog(`OTA升级进度: ${progress}%`)\n        })\n        \n        // ✅ 关键：使用Blu.vue中已经建立的设备连接信息\n        const deviceInfo = {\n          deviceId: this.connectedDevice.deviceId,\n          name: this.connectedDevice.name,\n          serviceId: this.serviceId,\n          characteristicId: this.writeCharId\n        }\n        \n        // 开始升级流程\n        await otaManager.startOTAUpgrade(\n          deviceInfo,\n          'https://your-server.com/firmware.bin' // 固件下载地址\n        )\n        \n        this.upgradeResult = 'success'\n        uni.hideLoading()\n        uni.showToast({ title: '升级成功！', icon: 'success' })\n        this.addLog('OTA升级成功')\n        \n        // 升级成功后重新检查版本\n        setTimeout(() => {\n          this.checkVersion()\n        }, 2000)\n        \n      } catch (error) {\n        uni.hideLoading()\n        this.upgradeResult = 'failed'\n        uni.showToast({ title: '升级失败: ' + error.message, icon: 'none' })\n        this.addLog('OTA升级失败: ' + error.message)\n        console.error('OTA升级失败:', error)\n      }\n    },\n    \n    /**\n     * 取消OTA升级\n     */\n    cancelOTAUpgrade() {\n      uni.showModal({\n        title: '取消升级',\n        content: '确定要取消固件升级吗？这可能导致设备异常。',\n        success: ({ confirm }) => {\n          if (confirm) {\n            // 这里应该调用OTA管理器的取消方法\n            this.otaStatus.isUpgrading = false\n            this.upgradeResult = 'cancelled'\n            uni.showToast({ title: '升级已取消', icon: 'none' })\n            this.addLog('OTA升级已取消')\n          }\n        }\n      })\n    },\n    \n    /**\n     * 从服务器获取最新版本信息\n     */\n    async fetchLatestVersion() {\n      // 模拟网络请求\n      return new Promise((resolve) => {\n        setTimeout(() => {\n          this.latestVersion = 'CC1_V1.1' // 模拟新版本\n          resolve()\n        }, 1000)\n      })\n    },\n    \n    /**\n     * 监听OTA状态变化\n     */\n    monitorOTAStatus() {\n      // 定期检查OTA状态\n      setInterval(() => {\n        const status = otaManager.getUpgradeStatus()\n        this.otaStatus = { ...this.otaStatus, ...status }\n      }, 500)\n    },\n    \n    // ✅ 保留原有的工具方法\n    addLog(message) {\n      // 修复时间戳格式，确保格式为 [HH:MM:SS]\n      const now = new Date()\n      const hours = now.getHours().toString().padStart(2, '0')\n      const minutes = now.getMinutes().toString().padStart(2, '0')\n      const seconds = now.getSeconds().toString().padStart(2, '0')\n      const timestamp = `${hours}:${minutes}:${seconds}`\n      \n      const logMessage = `[${timestamp}] ${message}`\n      this.logs.unshift(logMessage)\n      if (this.logs.length > 50) this.logs.pop()\n      // 同步打印到控制台\n      console.log(logMessage)\n    },\n\n    clearLogs() {\n      this.logs = []\n    }\n}\n</script>\n\n<style scoped>\n/* 保留原有的所有样式 */\n\n.container {\n  padding: 20rpx;\n  min-height: 100vh;\n}\n\n.card {\n  background: white;\n  border-radius: 15rpx;\n  padding: 30rpx;\n  margin: 20rpx 0;\n  box-shadow: 0 2rpx 10rpx rgba(0,0,0,0.1);\n}\n\n.title {\n  font-size: 36rpx;\n  font-weight: bold;\n  margin-bottom: 20rpx;\n  display: block;\n  color: #333;\n}\n\n.status-line {\n  display: flex;\n  justify-content: space-between;\n  padding: 15rpx 0;\n  border-bottom: 1rpx solid #f0f0f0;\n}\n\n.copyable {\n  color: #007AFF;\n  text-decoration: underline;\n  text-decoration-style: dotted;\n}\n\n.status-line:last-child {\n  border-bottom: none;\n}\n\n.device-item {\n  background: #f8f9fa;\n  border-radius: 10rpx;\n  padding: 25rpx;\n  margin: 15rpx 0;\n  border-left: 8rpx solid #007AFF;\n}\n\n.device-name {\n  font-size: 32rpx;\n  font-weight: bold;\n  display: block;\n  color: #007AFF;\n}\n\n.device-info {\n  font-size: 24rpx;\n  color: #666;\n  display: block;\n  margin-top: 8rpx;\n}\n\n.control-row {\n  display: flex;\n  gap: 20rpx;\n  margin: 20rpx 0;\n}\n\n.btn {\n  flex: 1;\n  background: #007AFF;\n  color: white;\n  border-radius: 10rpx;\n  padding: 20rpx;\n  text-align: center;\n  font-size: 28rpx;\n  border: none;\n}\n\n.btn:active {\n  background: #0056CC;\n}\n\n.btn:disabled {\n  background: #CCCCCC;\n  color: #666666;\n}\n\n.btn-active {\n  background: #34C759;\n}\n\n.btn-secondary {\n  background: #FF9500;\n}\n\n.btn-danger {\n  background: #FF3B30;\n}\n\n.btn-small {\n  padding: 15rpx;\n  font-size: 24rpx;\n}\n\n.log-container {\n  max-height: 300rpx;\n  background: #f8f8f8;\n  border-radius: 10rpx;\n  padding: 20rpx;\n  margin-bottom: 20rpx;\n}\n\n.log-item {\n  font-size: 22rpx;\n  font-family: 'Courier New', monospace;\n  display: block;\n  margin: 5rpx 0;\n  color: #333;\n  line-height: 1.4;\n}\n\n/* ✅ 新增：OTA相关样式 */\n.version-info {\n  padding: 20rpx 0;\n  border-bottom: 1rpx solid #f0f0f0;\n}\n\n.version-info text {\n  display: block;\n  margin: 10rpx 0;\n  font-size: 28rpx;\n}\n\n.update-available {\n  color: #FF9500;\n  font-weight: bold;\n}\n\n.update-tip {\n  color: #34C759;\n  font-size: 24rpx;\n}\n\n.upgrade-progress {\n  padding: 30rpx 0;\n  text-align: center;\n}\n\n.upgrade-progress text {\n  display: block;\n  margin: 10rpx 0;\n  font-size: 26rpx;\n}\n\n.ota-controls {\n  display: flex;\n  gap: 20rpx;\n  margin: 30rpx 0;\n}\n\n.ota-status {\n  text-align: center;\n  padding: 20rpx 0;\n}\n\n.upgrading {\n  color: #007AFF;\n  font-weight: bold;\n}\n\n.success {\n  color: #34C759;\n  font-weight: bold;\n}\n\n.failed {\n  color: #FF3B30;\n  font-weight: bold;\n}\n\n/* 进度条样式调整 */\nprogress {\n  width: 100%;\n  margin: 20rpx 0;\n}\n</style>","import MiniProgramPage from '/Users/yons/Desktop/zhengli/xiaochengx/Code/Blu_Charge/pages/Blu/Blu.vue'\nwx.createPage(MiniProgramPage)"],"names":["uni","res","PROTOCOL","PacketBuilder","otaManager"],"mappings":"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"}